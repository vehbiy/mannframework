/*
	This file was generated automatically by Garcia Framework. 
	Do not edit manually. 
	Add a new partial class with the same name if you want to add extra functionality.
*/
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using MannFramework;
using System.Web.Http.Routing;
using System.Web.Mvc;
using MannFramework.Macondo.BL;
using MannFramework.Application;
using MannFramework.Macondo.Models;

namespace MannFramework.Macondo.Controllers
{
    public partial class ItemController : GarciaEntityMvcController<Item>
    {
        public ItemController()
        {
            this.UseAutoGeneratedListView = false;
        }

        [HttpGet]
        public ActionResult Code(int id)
        {
            this.CheckSession();
            this.SetTitle();
            Item item = EntityManager.Instance.GetItem<Item>(id);

            if (item == null)
            {
                return this.RedirectToHome();
            }

            GenerationManager manager = new GenerationManager(UIStateManager.Instance.Project, null);
            List<GenerationResult> results = manager.Generate(item);
            string title = item == null ? "" : item.Name + " ";
            ViewBag.PageTitle = title + GarciaLocalizationManager.Localize("Code");
            return View(results);
        }

        protected override bool InnerCheckSession()
        {
            return UIStateManager.Instance.CheckProject();
        }

        protected override void AfterEdit()
        {
            UIStateManager.Instance.Project.Items = EntityManager.Instance.GetItems<Item>("ProjectId", UIStateManager.Instance.Project.Id);
        }

        public override ActionResult List()
        {
            int? itemId = Helpers.GetValueFromObject<int?>(Request.QueryString["ProjectId"]);
            Project item = null;

            if (itemId.HasValue)
            {
                item = EntityManager.Instance.GetItem<Project>(itemId);
            }
            else if (UIStateManager.Instance.Project != null)
            {
                return this.RedirectToAction("List", new { @ProjectId = UIStateManager.Instance.Project.Id });
            }

            string title = item == null ? "" : item.Name + " ";
            ViewBag.PageTitle = title + GarciaLocalizationManager.Localize("ItemList");
            return base.List();
        }

        [HttpGet]
        public ActionResult Copy()
        {
            CopyItemModel model = new CopyItemModel();
            model.ProjectId = Helpers.GetValueFromObject<int?>(Request.QueryString["ProjectId"]);
            model.ItemId = Helpers.GetValueFromObject<int?>(Request.QueryString["ItemId"]);
            return View(model);
        }

        [HttpPost]
        public ActionResult Copy(CopyItemModel model)
        {
            if (ModelState.IsValid)
            {
                Project project = EntityManager.Instance.GetItem<Project>(model.ProjectId);
                Item item = EntityManager.Instance.GetItem<Item>(model.ItemId);
                OperationResult<Item> result = item.Copy(project, UIStateManager.Instance.Project, model.Name);

                if (result.Success)
                {
                    return this.RedirectToIndex();
                }
                else if (result.ValidationResults != null && result.ValidationResults.Count != 0 && !string.IsNullOrEmpty(result.ValidationResults[0].PropertyName))
                {
                    ValidationResult validationResult = result.ValidationResults[0];
                    ModelState.AddModelError(validationResult.PropertyName, result.LocalizedValidationMessage);
                }
            }

            return View(model);
        }
    }
}

