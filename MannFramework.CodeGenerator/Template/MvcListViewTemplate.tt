<#@ template language="C#" HostSpecific="False" inherits="BaseTemplate"#>
<#@ output extension=".cshtml" #>
<#@ import namespace="MannFramework" #>
<#@ import namespace="MannFramework.Application" #>
<#@ parameter type="MannFramework.Application.Item" name="Item" #>
<#@ parameter type="System.Boolean" name="GenerateMvcModel" #>
<#@ include file="IncludeImports.t4" #>
<#
	string itemName = Item.Name;
	string modelName = itemName;

	if (GenerateMvcModel)
	{
		modelName += "Model";
	}

	string controllerName = itemName + "Controller";
	string viewName = "List";
	List<string> elements = new List<string>();
	List<ItemProperty> properties = Item.Properties.Where(x => !x.MvcIgnore && !x.MvcListIgnore).ToList();
#>
@model IEnumerable<#= "<" + modelName + ">" #>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
					<h5>@Html.IndexPageTitle("<#= itemName #>")</h5>
					<div class="ibox-tools">
						@Html.CreateLink()
					</div>
                </div>
                <div class="ibox-content">
					<table class="table table-striped">
						<thead>
							<tr>
<# foreach (var property in properties) { #>
<# if (elements.Contains(property.Name)) continue; #>
<# else elements.Add(property.Name); #>
								<th>
<# if (property.MappingType == ItemPropertyMappingType.Property) { #>
<# if (property.InnerType != null && !elements.Contains(property.Name + "Id")) elements.Add(property.Name + "Id"); #>
									@Html.Localize("<#= itemName #>.<#= property.Name #>")
<#} #>
								</th>
<#} #>
								<th></th>
							</tr>
						</thead>
						<tbody>
							@Html.EmptyMessage(Model)
							@foreach (var item in Model)
							{
								<tr>
<# elements.Clear(); #>
<# foreach (var property in properties) { #>
<# if (elements.Contains(property.Name)) continue; #>
<# else elements.Add(property.Name); #>
									<td>
<# if (property.MappingType == ItemPropertyMappingType.Property) { #>
<# if (property.InnerType != null && !elements.Contains(property.Name + "Id")) elements.Add(property.Name + "Id"); #>
<# if (property.Type == ItemPropertyType.Class) { #>
										@Html.Modal(item.<#= property.Name #>, "Details", "<#= property.InnerType.Name #>", new RouteValueDictionary { { "Id", item.<#= property.Name #>Id } }, item.<#= property.Name #>Id)
<#} else { #>
										@Html.DisplayFor(modelItem => item.<#= property.Name #>)
<#} #>
<#} #>
									</td>
<#} #>
									<td>
<# foreach (var property in Item.Properties) { #>
<# if (property.MappingType != ItemPropertyMappingType.Property && property.InnerType != null) { #>
										@Html.LocalizedStyledActionLink("<#= property.Name #>", "List", "<#= property.InnerType.Name #>", new RouteValueDictionary { { "<#= itemName #>Id", item.Id } })
<#} #>
<#} #>
										@Html.EditLink(item.Id)
										@Html.DeleteLink(item.Id)
									</td>
								</tr>
							}
						</tbody>
                    </table>
				</div>
            </div>
        </div>
    </div>
 </div>