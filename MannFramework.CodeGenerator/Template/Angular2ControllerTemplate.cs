// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 17.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Garcia.CodeGenerator.Template
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using MannFramework;
    using MannFramework.CodeGenerator;
    using MannFramework.Application;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Users\vehbi\source\repos\garcia\Garcia.CodeGenerator\Template\Angular2ControllerTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
    public partial class Angular2ControllerTemplate : BaseTemplate
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            
            #line 10 "C:\Users\vehbi\source\repos\garcia\Garcia.CodeGenerator\Template\Angular2ControllerTemplate.tt"

	List<string> fields = new List<string>();
	string itemName = Item.Name;
	string controllerName = itemName + "Ctrl";
	List<ItemProperty> properties = Item.Properties.Where(x => !x.MvcIgnore && x.AddOnChange).ToList();
	// List<ItemProperty> properties = Item.Properties.Where(x => !x.MvcIgnore).ToList();
	int counter = 0;
	string initCall = "";

            
            #line default
            #line hidden
            this.Write("App.controller(\"");
            
            #line 19 "C:\Users\vehbi\source\repos\garcia\Garcia.CodeGenerator\Template\Angular2ControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(controllerName));
            
            #line default
            #line hidden
            this.Write("\", [\"$scope\", \"$rootScope\", \"$timeout\", ");
            
            #line 19 "C:\Users\vehbi\source\repos\garcia\Garcia.CodeGenerator\Template\Angular2ControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(controllerName));
            
            #line default
            #line hidden
            this.Write("])\r\n\r\nfunction ");
            
            #line 21 "C:\Users\vehbi\source\repos\garcia\Garcia.CodeGenerator\Template\Angular2ControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(controllerName));
            
            #line default
            #line hidden
            this.Write("($scope, $rootScope, $timeout) {\r\n    window.gr = $scope;\r\n\r\n\t$scope.model = {\r\n");
            
            #line 25 "C:\Users\vehbi\source\repos\garcia\Garcia.CodeGenerator\Template\Angular2ControllerTemplate.tt"
 foreach (var property in properties) 
{
	string propertyName = property.Name;

	if (property.MappingType == ItemPropertyMappingType.Property && property.InnerType != null) 
	{ 
		propertyName += "Id";
	}

            
            #line default
            #line hidden
            this.Write("\t\t");
            
            #line 34 "C:\Users\vehbi\source\repos\garcia\Garcia.CodeGenerator\Template\Angular2ControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(propertyName));
            
            #line default
            #line hidden
            this.Write("OnChange = function () {\r\n");
            
            #line 35 "C:\Users\vehbi\source\repos\garcia\Garcia.CodeGenerator\Template\Angular2ControllerTemplate.tt"
 if (property.MappingType == ItemPropertyMappingType.Property && property.InnerType != null) { 
            
            #line default
            #line hidden
            this.Write("\t\t\t$scope.Init");
            
            #line 36 "C:\Users\vehbi\source\repos\garcia\Garcia.CodeGenerator\Template\Angular2ControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(propertyName));
            
            #line default
            #line hidden
            this.Write("();\r\n");
            
            #line 37 "C:\Users\vehbi\source\repos\garcia\Garcia.CodeGenerator\Template\Angular2ControllerTemplate.tt"
} 
            
            #line default
            #line hidden
            this.Write("\t\t}\r\n");
            
            #line 39 "C:\Users\vehbi\source\repos\garcia\Garcia.CodeGenerator\Template\Angular2ControllerTemplate.tt"
} 
            
            #line default
            #line hidden
            this.Write("\t}\r\n\r\n");
            
            #line 42 "C:\Users\vehbi\source\repos\garcia\Garcia.CodeGenerator\Template\Angular2ControllerTemplate.tt"
 foreach (var property in properties.Where(x => x.MappingType == ItemPropertyMappingType.Property && x.InnerType != null)) 
{
	string propertyName = property.Name;

	if (property.MappingType == ItemPropertyMappingType.Property && property.InnerType != null) 
	{ 
		propertyName += "Id";
	}

            
            #line default
            #line hidden
            this.Write("\t$scope.Init");
            
            #line 51 "C:\Users\vehbi\source\repos\garcia\Garcia.CodeGenerator\Template\Angular2ControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(propertyName));
            
            #line default
            #line hidden
            this.Write(" = function () {\r\n\t}\r\n");
            
            #line 53 "C:\Users\vehbi\source\repos\garcia\Garcia.CodeGenerator\Template\Angular2ControllerTemplate.tt"
 
	initCall += ("$scope.Init" + propertyName + "();\n"); 

            
            #line default
            #line hidden
            
            #line 56 "C:\Users\vehbi\source\repos\garcia\Garcia.CodeGenerator\Template\Angular2ControllerTemplate.tt"
} 
            
            #line default
            #line hidden
            
            #line 57 "C:\Users\vehbi\source\repos\garcia\Garcia.CodeGenerator\Template\Angular2ControllerTemplate.tt"

	initCall = initCall.TrimEnd('\n');

            
            #line default
            #line hidden
            this.Write("\r\n\t$scope.InitEdit = function () {\r\n\t\t$timeout(function () {\r\n\t\t\t");
            
            #line 63 "C:\Users\vehbi\source\repos\garcia\Garcia.CodeGenerator\Template\Angular2ControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(initCall));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t});\r\n    }\r\n\r\n    $scope.InitList = function () {\r\n\t\t$timeout(function () {\r\n" +
                    "\t\t});\r\n    }\r\n}\r\n");
            return this.GenerationEnvironment.ToString();
        }
        
        #line 72 "C:\Users\vehbi\source\repos\garcia\Garcia.CodeGenerator\Template\Angular2ControllerTemplate.tt"

	protected override Generator CreateGenerator()
	{
		return new Angular2ControllerGenerator();
	}

        
        #line default
        #line hidden
        
        #line 1 "C:\Users\vehbi\source\repos\garcia\Garcia.CodeGenerator\Template\Angular2ControllerTemplate.tt"

private global::MannFramework.Application.Item _ItemField;

/// <summary>
/// Access the Item parameter of the template.
/// </summary>
private global::MannFramework.Application.Item Item
{
    get
    {
        return this._ItemField;
    }
}


/// <summary>
/// Initialize the template
/// </summary>
public override void Initialize()
{
    base.Initialize();
    if ((this.Errors.HasErrors == false))
    {
bool ItemValueAcquired = false;
if (this.Session.ContainsKey("Item"))
{
    this._ItemField = ((global::MannFramework.Application.Item)(this.Session["Item"]));
    ItemValueAcquired = true;
}
if ((ItemValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("Item");
    if ((data != null))
    {
        this._ItemField = ((global::MannFramework.Application.Item)(data));
    }
}


    }
}


        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
}
